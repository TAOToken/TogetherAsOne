{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red79\green123\blue61;\red26\green26\blue41;\red172\green172\blue193;
\red70\green137\blue204;\red167\green197\blue152;\red212\green212\blue212;\red45\green175\blue118;\red14\green86\blue166;
\red31\green133\blue64;\red13\green102\blue149;\red140\green108\blue11;\red253\green181\blue13;\red194\green126\blue101;
\red76\green167\blue134;\red237\green114\blue173;\red187\green97\blue44;\red115\green123\blue132;}
{\*\expandedcolortbl;;\cssrgb\c37647\c54510\c30588;\cssrgb\c13333\c13725\c21176;\cssrgb\c72941\c73333\c80000;
\cssrgb\c33725\c61176\c83922;\cssrgb\c70980\c80784\c65882;\cssrgb\c86275\c86275\c86275;\cssrgb\c19608\c72941\c53725;\cssrgb\c3137\c42353\c70980;
\cssrgb\c12941\c58039\c31765;\cssrgb\c0\c47843\c65098;\cssrgb\c61961\c49412\c3137;\cssrgb\c100000\c75686\c2745;\cssrgb\c80784\c56863\c47059;
\cssrgb\c35686\c70588\c59608;\cssrgb\c95294\c54118\c73333;\cssrgb\c78824\c45882\c22353;\cssrgb\c52549\c55686\c58824;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // SPDX-License-Identifier: MIT\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 pragma\cf4 \strokec4  \cf5 \strokec5 solidity\cf4 \strokec4  \cf6 \strokec6 0.8.11\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 abstract\cf4 \strokec4  \cf5 \strokec5 contract\cf4 \strokec4  Context \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 function\cf4 \strokec4  _msgSender\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 virtual\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 payable\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf8 \strokec8 payable\cf7 \strokec7 (\cf11 \strokec11 msg\cf7 \strokec7 .\cf4 \strokec4 sender\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _msgData\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 virtual\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 this\cf7 \strokec7 ;\cf4 \strokec4  \cf2 \strokec2 // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf11 \strokec11 msg\cf7 \strokec7 .\cf4 \strokec4 data\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 interface IERC20 \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  totalSupply\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  balanceOf\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  transfer\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amount\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  allowance\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  owner\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  approve\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amount\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  transferFrom\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 event\cf4 \strokec4  Transfer\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  from\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  value\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  Approval\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  owner\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  value\cb1 \
\cb3     \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 library\cf4 \strokec4  SafeMath \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 function\cf4 \strokec4  add\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  b\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  c \cf7 \strokec7 =\cf4 \strokec4  a \cf7 \strokec7 +\cf4 \strokec4  b\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 c \cf7 \strokec7 >=\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "SafeMath: addition overflow"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3         \cf10 \strokec10 return\cf4 \strokec4  c\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  sub\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  b\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  sub\cf7 \strokec7 (\cf4 \strokec4 a\cf7 \strokec7 ,\cf4 \strokec4  b\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "SafeMath: subtraction overflow"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  sub\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  b\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  errorMessage\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 b \cf7 \strokec7 <=\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \strokec4  errorMessage\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  c \cf7 \strokec7 =\cf4 \strokec4  a \cf7 \strokec7 -\cf4 \strokec4  b\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3         \cf10 \strokec10 return\cf4 \strokec4  c\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  mul\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  b\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 a \cf7 \strokec7 ==\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             \cf10 \strokec10 return\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  c \cf7 \strokec7 =\cf4 \strokec4  a \cf7 \strokec7 *\cf4 \strokec4  b\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 c \cf7 \strokec7 /\cf4 \strokec4  a \cf7 \strokec7 ==\cf4 \strokec4  b\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "SafeMath: multiplication overflow"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3         \cf10 \strokec10 return\cf4 \strokec4  c\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  div\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  b\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  div\cf7 \strokec7 (\cf4 \strokec4 a\cf7 \strokec7 ,\cf4 \strokec4  b\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "SafeMath: division by zero"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  div\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  b\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  errorMessage\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 b \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ,\cf4 \strokec4  errorMessage\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  c \cf7 \strokec7 =\cf4 \strokec4  a \cf7 \strokec7 /\cf4 \strokec4  b\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 // assert(a == b * c + a % b); // There is no case in which this doesn't hold\cf4 \cb1 \strokec4 \
\
\cb3         \cf10 \strokec10 return\cf4 \strokec4  c\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  mod\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  b\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  mod\cf7 \strokec7 (\cf4 \strokec4 a\cf7 \strokec7 ,\cf4 \strokec4  b\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "SafeMath: modulo by zero"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  mod\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  a\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  b\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  errorMessage\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 b \cf7 \strokec7 !=\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ,\cf4 \strokec4  errorMessage\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  a \cf7 \strokec7 %\cf4 \strokec4  b\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 library\cf4 \strokec4  Address \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 function\cf4 \strokec4  isContract\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 // for accounts without code, i.e. `keccak256('')`\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  codehash\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  accountHash \cf7 \strokec7 =\cf4 \strokec4  \cf15 \strokec15 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 // solhint-disable-next-line no-inline-assembly\cf4 \cb1 \strokec4 \
\cb3         assembly \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             codehash := extcodehash\cf7 \strokec7 (\cf4 \strokec4 account\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 codehash \cf7 \strokec7 !=\cf4 \strokec4  accountHash \cf7 \strokec7 &&\cf4 \strokec4  codehash \cf7 \strokec7 !=\cf4 \strokec4  \cf15 \strokec15 0x0\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  sendValue\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 payable\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amount\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ).\cf4 \strokec4 balance \cf7 \strokec7 >=\cf4 \strokec4  amount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf14 \strokec14 "Address: insufficient balance"\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3         \cf2 \strokec2 // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf5 \strokec5 bool\cf4 \strokec4  success\cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  recipient\cf7 \strokec7 .\cf4 \strokec4 call\cf7 \strokec7 \{\cf4 \strokec4 value\cf7 \strokec7 :\cf4 \strokec4  amount\cf7 \strokec7 \}(\cf14 \strokec14 ""\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             success\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf14 \strokec14 "Address: unable to send value, recipient may have reverted"\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  functionCall\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  target\cf7 \strokec7 ,\cf4 \strokec4  \cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  data\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 internal\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  functionCall\cf7 \strokec7 (\cf4 \strokec4 target\cf7 \strokec7 ,\cf4 \strokec4  data\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Address: low-level call failed"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  functionCall\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  target\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  data\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  errorMessage\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _functionCallWithValue\cf7 \strokec7 (\cf4 \strokec4 target\cf7 \strokec7 ,\cf4 \strokec4  data\cf7 \strokec7 ,\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ,\cf4 \strokec4  errorMessage\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  functionCallWithValue\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  target\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  data\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  value\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \cb1 \strokec4 \
\cb3             functionCallWithValue\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3                 target\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3                 data\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3                 value\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3                 \cf14 \strokec14 "Address: low-level call with value failed"\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  functionCallWithValue\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  target\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  data\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  value\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  errorMessage\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ).\cf4 \strokec4 balance \cf7 \strokec7 >=\cf4 \strokec4  value\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf14 \strokec14 "Address: insufficient balance for call"\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _functionCallWithValue\cf7 \strokec7 (\cf4 \strokec4 target\cf7 \strokec7 ,\cf4 \strokec4  data\cf7 \strokec7 ,\cf4 \strokec4  value\cf7 \strokec7 ,\cf4 \strokec4  errorMessage\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _functionCallWithValue\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  target\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  data\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  weiValue\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  errorMessage\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 isContract\cf7 \strokec7 (\cf4 \strokec4 target\cf7 \strokec7 ),\cf4 \strokec4  \cf14 \strokec14 "Address: call to non-contract"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3         \cf7 \strokec7 (\cf5 \strokec5 bool\cf4 \strokec4  success\cf7 \strokec7 ,\cf4 \strokec4  \cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  returndata\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  target\cf7 \strokec7 .\cf4 \strokec4 call\cf7 \strokec7 \{\cf4 \strokec4 value\cf7 \strokec7 :\cf4 \strokec4  weiValue\cf7 \strokec7 \}(\cf4 \cb1 \strokec4 \
\cb3             data\cb1 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 success\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             \cf10 \strokec10 return\cf4 \strokec4  returndata\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \strokec4  \cf13 \strokec13 else\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 returndata\cf7 \strokec7 .\cf4 \strokec4 length \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3                 assembly \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3                     \cf5 \strokec5 let\cf4 \strokec4  returndata_size := mload\cf7 \strokec7 (\cf4 \strokec4 returndata\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3                     \cf11 \strokec11 revert\cf7 \strokec7 (\cf4 \strokec4 add\cf7 \strokec7 (\cf6 \strokec6 32\cf7 \strokec7 ,\cf4 \strokec4  returndata\cf7 \strokec7 ),\cf4 \strokec4  returndata_size\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 \}\cf4 \strokec4  \cf13 \strokec13 else\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3                 \cf11 \strokec11 revert\cf7 \strokec7 (\cf4 \strokec4 errorMessage\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 contract\cf4 \strokec4  Ownable \cf5 \strokec5 is\cf4 \strokec4  Context \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _owner\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _previousOwner\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _lockTime\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 event\cf4 \strokec4  OwnershipTransferred\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  previousOwner\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  newOwner\cb1 \
\cb3     \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf16 \strokec16 constructor\cf7 \strokec7 ()\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  msgSender \cf7 \strokec7 =\cf4 \strokec4  _msgSender\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         _owner \cf7 \strokec7 =\cf4 \strokec4  msgSender\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  OwnershipTransferred\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ),\cf4 \strokec4  msgSender\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  owner\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _owner\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 modifier\cf4 \strokec4  onlyOwner\cf7 \strokec7 ()\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _owner \cf7 \strokec7 ==\cf4 \strokec4  _msgSender\cf7 \strokec7 (),\cf4 \strokec4  \cf14 \strokec14 "Ownable: caller is not the owner"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  renounceOwnership\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf9 \strokec9 virtual\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  OwnershipTransferred\cf7 \strokec7 (\cf4 \strokec4 _owner\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ));\cf4 \cb1 \strokec4 \
\cb3         _owner \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  transferOwnership\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  newOwner\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf9 \strokec9 virtual\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             newOwner \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ),\cf4 \cb1 \strokec4 \
\cb3             \cf14 \strokec14 "Ownable: new owner is the zero address"\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  OwnershipTransferred\cf7 \strokec7 (\cf4 \strokec4 _owner\cf7 \strokec7 ,\cf4 \strokec4  newOwner\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _owner \cf7 \strokec7 =\cf4 \strokec4  newOwner\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  getUnlockTime\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _lockTime\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  getTime\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 timestamp\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 interface IUniswapV2Factory \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  PairCreated\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  token0\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  token1\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  pair\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  feeTo\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  feeToSetter\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  getPair\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  tokenA\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf4 \strokec4  tokenB\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  pair\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  allPairs\cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  pair\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  allPairsLength\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  createPair\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  tokenA\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf4 \strokec4  tokenB\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  pair\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setFeeTo\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setFeeToSetter\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 interface IUniswapV2Pair \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  Approval\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  owner\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  value\cb1 \
\cb3     \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  Transfer\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  from\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  value\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  name\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  symbol\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  decimals\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint8\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  totalSupply\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  balanceOf\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  owner\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  allowance\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  owner\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  approve\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  value\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  transfer\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  value\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  transferFrom\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  from\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  value\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  DOMAIN_SEPARATOR\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bytes32\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  PERMIT_TYPEHASH\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bytes32\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  nonces\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  owner\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  permit\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  owner\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  value\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint8\cf4 \strokec4  v\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  r\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  s\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 event\cf4 \strokec4  Burn\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount0\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount1\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  to\cb1 \
\cb3     \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  Swap\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount0In\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount1In\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount0Out\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount1Out\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  to\cb1 \
\cb3     \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  Sync\cf7 \strokec7 (\cf5 \strokec5 uint112\cf4 \strokec4  reserve0\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint112\cf4 \strokec4  reserve1\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  MINIMUM_LIQUIDITY\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  factory\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  token0\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  token1\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  getReserves\cf7 \strokec7 ()\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint112\cf4 \strokec4  reserve0\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint112\cf4 \strokec4  reserve1\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint32\cf4 \strokec4  blockTimestampLast\cb1 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  price0CumulativeLast\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  price1CumulativeLast\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  kLast\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  burn\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amount0\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amount1\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swap\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount0Out\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount1Out\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 bytes\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  data\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  skim\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  sync\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  initialize\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 interface IUniswapV2Router01 \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  factory\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  WETH\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  addLiquidity\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  tokenA\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  tokenB\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountADesired\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountBDesired\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountAMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountBMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  amountA\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  amountB\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  liquidity\cb1 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  addLiquidityETH\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  token\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountTokenDesired\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountTokenMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountETHMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 payable\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  amountToken\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  amountETH\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  liquidity\cb1 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  removeLiquidity\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  tokenA\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  tokenB\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  liquidity\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountAMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountBMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountA\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amountB\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  removeLiquidityETH\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  token\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  liquidity\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountTokenMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountETHMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountToken\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amountETH\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  removeLiquidityWithPermit\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  tokenA\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  tokenB\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  liquidity\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountAMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountBMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bool\cf4 \strokec4  approveMax\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint8\cf4 \strokec4  v\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  r\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  s\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountA\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amountB\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  removeLiquidityETHWithPermit\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  token\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  liquidity\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountTokenMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountETHMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bool\cf4 \strokec4  approveMax\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint8\cf4 \strokec4  v\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  r\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  s\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountToken\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amountETH\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapExactTokensForTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountIn\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOutMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  amounts\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapTokensForExactTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOut\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountInMax\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  amounts\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapExactETHForTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOutMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 payable\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  amounts\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapTokensForExactETH\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOut\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountInMax\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  amounts\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapExactTokensForETH\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountIn\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOutMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  amounts\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapETHForExactTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOut\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 payable\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  amounts\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  quote\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountA\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  reserveA\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  reserveB\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountB\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  getAmountOut\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountIn\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  reserveIn\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  reserveOut\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountOut\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  getAmountIn\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOut\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  reserveIn\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  reserveOut\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountIn\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  getAmountsOut\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountIn\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  amounts\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  getAmountsIn\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountOut\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  amounts\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 interface IUniswapV2Router02 \cf5 \strokec5 is\cf4 \strokec4  IUniswapV2Router01 \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  removeLiquidityETHSupportingFeeOnTransferTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  token\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  liquidity\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountTokenMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountETHMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountETH\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  token\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  liquidity\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountTokenMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountETHMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bool\cf4 \strokec4  approveMax\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint8\cf4 \strokec4  v\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  r\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  s\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountETH\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapExactTokensForTokensSupportingFeeOnTransferTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountIn\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOutMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapExactETHForTokensSupportingFeeOnTransferTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOutMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 payable\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapExactTokensForETHSupportingFeeOnTransferTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountIn\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountOutMin\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 calldata\cf4 \strokec4  path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  deadline\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 contract\cf4 \strokec4  TogetherAsOne \cf5 \strokec5 is\cf4 \strokec4  Context\cf7 \strokec7 ,\cf4 \strokec4  IERC20\cf7 \strokec7 ,\cf4 \strokec4  Ownable \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 using\cf4 \strokec4  SafeMath \cf17 \strokec17 for\cf4 \strokec4  \cf5 \strokec5 uint256\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 using\cf4 \strokec4  Address \cf17 \strokec17 for\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 payable\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  marketingAddress\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3       \cb1 \
\cb3     \cf5 \strokec5 mapping\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _rOwned\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 mapping\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _tOwned\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 mapping\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 mapping\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 uint256\cf7 \strokec7 ))\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _allowances\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 // Anti-bot and anti-whale mappings and variables\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 mapping\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _holderLastTransferTimestamp\cf7 \strokec7 ;\cf4 \strokec4  \cf2 \strokec2 // to hold last Transfers temporarily during launch\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 bool\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  transferDelayEnabled \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 bool\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  limitsInEffect \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  percentForLPBurn \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 25\cf7 \strokec7 ;\cf4 \strokec4  \cf2 \strokec2 // 25 = .25%\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 bool\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  lpBurnEnabled \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  lpBurnFrequency \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 3600\cf4 \strokec4  seconds\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  lastLpBurnTime\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  manualBurnFrequency \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 30\cf4 \strokec4  minutes\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  lastManualLpBurnTime\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 mapping\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _isExcludedFromFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 mapping\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _isExcluded\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _excluded\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf5 \strokec5 constant\cf4 \strokec4  MAX \cf7 \strokec7 =\cf4 \strokec4  \cf7 \strokec7 ~\cf5 \strokec5 uint256\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf5 \strokec5 constant\cf4 \strokec4  _tTotal \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 1e12\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 1e18\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _rTotal \cf7 \strokec7 =\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 MAX \cf7 \strokec7 -\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 MAX \cf7 \strokec7 %\cf4 \strokec4  _tTotal\cf7 \strokec7 ));\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _tFeeTotal\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 string\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf5 \strokec5 constant\cf4 \strokec4  _name \cf7 \strokec7 =\cf4 \strokec4  \cf14 \strokec14 "Together As One"\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 string\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf5 \strokec5 constant\cf4 \strokec4  _symbol \cf7 \strokec7 =\cf4 \strokec4  \cf14 \strokec14 "TAO"\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint8\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf5 \strokec5 constant\cf4 \strokec4  _decimals \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 18\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 // these values are pretty much arbitrary since they get overwritten for every txn, but the placeholders make it easier to work with current contract.\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _taxFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _previousTaxFee \cf7 \strokec7 =\cf4 \strokec4  _taxFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _liquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _previousLiquidityFee \cf7 \strokec7 =\cf4 \strokec4  _liquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf5 \strokec5 constant\cf4 \strokec4  BUY \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 1\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf5 \strokec5 constant\cf4 \strokec4  SELL \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 2\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf5 \strokec5 constant\cf4 \strokec4  TRANSFER \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 3\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  buyOrSellSwitch\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _buyTaxFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 200\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _buyLiquidityFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 400\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _buyMarketingFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 500\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _sellTaxFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 200\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _sellLiquidityFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 900\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _sellMarketingFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 500\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  tradingActiveBlock \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \strokec4  \cf2 \strokec2 // 0 means trading is not active\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  lastLPWithdrawalTimestamp \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _liquidityTokensToSwap\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _marketingTokensToSwap\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  maxTransactionAmount\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 mapping\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _isExcludedMaxTransactionAmount\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  maxWallet\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 bool\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  gasLimitActive \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  gasPriceLimit \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 435\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  gwei\cf7 \strokec7 ;\cf4 \strokec4  \cf2 \strokec2 // do not allow over x gwei for launch\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 // store addresses that a automatic market maker pairs. Any transfer *to* these addresses\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 // could be subject to a maximum transfer amount\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 mapping\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  automatedMarketMakerPairs\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  minimumTokensBeforeSwap\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     IUniswapV2Router02 \cf8 \strokec8 public\cf4 \strokec4  uniswapV2Router\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  uniswapV2Pair\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 bool\cf4 \strokec4  inSwapAndLiquify\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 bool\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  swapAndLiquifyEnabled \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 bool\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  tradingActive \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 event\cf4 \strokec4  SwapAndLiquifyEnabledUpdated\cf7 \strokec7 (\cf5 \strokec5 bool\cf4 \strokec4  enabled\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  SwapAndLiquify\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tokensSwapped\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  ethReceived\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tokensIntoLiquidity\cb1 \
\cb3     \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 event\cf4 \strokec4  SwapETHForTokens\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountIn\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  path\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 event\cf4 \strokec4  SwapTokensForETH\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  amountIn\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  path\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  SetAutomatedMarketMakerPair\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  pair\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 bool\cf4 \strokec4  value\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  ExcludeFromReward\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  excludedAddress\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  IncludeInReward\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  includedAddress\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  ExcludeFromFee\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  excludedAddress\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  IncludeInFee\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  includedAddress\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  SetBuyFee\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  marketingFee\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  liquidityFee\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  reflectFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  SetSellFee\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  marketingFee\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  liquidityFee\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  reflectFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  TransferForeignToken\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  token\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  UpdatedMarketingAddress\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  marketing\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 event\cf4 \strokec4  AutoNukeLP\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  tokensNuked\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 event\cf4 \strokec4  ManualNukeLP\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  \cf13 \strokec13 indexed\cf4 \strokec4  tokensNuked\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 modifier\cf4 \strokec4  lockTheSwap\cf7 \strokec7 ()\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         inSwapAndLiquify \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         inSwapAndLiquify \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf16 \strokec16 constructor\cf7 \strokec7 ()\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  newOwner \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf11 \strokec11 msg\cf7 \strokec7 .\cf4 \strokec4 sender\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf4 \strokec4 newOwner\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rTotal\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3         IUniswapV2Router02 _uniswapV2Router \cf7 \strokec7 =\cf4 \strokec4  IUniswapV2Router02\cf7 \strokec7 (\cf15 \strokec15 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         excludeFromMaxTransaction\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 _uniswapV2Router\cf7 \strokec7 ),\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         uniswapV2Router \cf7 \strokec7 =\cf4 \strokec4  _uniswapV2Router\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         uniswapV2Pair \cf7 \strokec7 =\cf4 \strokec4  IUniswapV2Factory\cf7 \strokec7 (\cf4 \strokec4 _uniswapV2Router\cf7 \strokec7 .\cf4 \strokec4 factory\cf7 \strokec7 ()).\cf4 \strokec4 createPair\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ),\cf4 \strokec4  _uniswapV2Router\cf7 \strokec7 .\cf4 \strokec4 WETH\cf7 \strokec7 ());\cf4 \cb1 \strokec4 \
\cb3         excludeFromMaxTransaction\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 ),\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _setAutomatedMarketMakerPair\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 ),\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 // lowered due to lower initial liquidity amount.\cf4 \cb1 \strokec4 \
\cb3         maxTransactionAmount \cf7 \strokec7 =\cf4 \strokec4  _tTotal \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 25\cf4 \strokec4  \cf7 \strokec7 /\cf4 \strokec4  \cf6 \strokec6 10000\cf7 \strokec7 ;\cf4 \strokec4  \cf2 \strokec2 // 0.25% maxTransactionAmountTxn\cf4 \cb1 \strokec4 \
\cb3         minimumTokensBeforeSwap \cf7 \strokec7 =\cf4 \strokec4  _tTotal \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 5\cf4 \strokec4  \cf7 \strokec7 /\cf4 \strokec4  \cf6 \strokec6 10000\cf7 \strokec7 ;\cf4 \strokec4  \cf2 \strokec2 // 0.05% swap tokens amount\cf4 \cb1 \strokec4 \
\cb3         maxWallet \cf7 \strokec7 =\cf4 \strokec4  _tTotal \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf7 \strokec7 /\cf4 \strokec4  \cf6 \strokec6 100\cf7 \strokec7 ;\cf4 \strokec4  \cf2 \strokec2 // 1% max wallet\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         marketingAddress \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 payable\cf7 \strokec7 (\cf15 \strokec15 0x65B0a7E43AcBd7457D65298197C64e5dbD6a8F86\cf7 \strokec7 );\cf4 \strokec4  \cf2 \strokec2 // Marketing Address\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         lastLPWithdrawalTimestamp \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \strokec4  \cf2 \strokec2 // replace with block.timestamp\cf4 \cb1 \strokec4 \
\
\cb3         _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 newOwner\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _isExcludedFromFee\cf7 \strokec7 [\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 )]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 marketingAddress\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         excludeFromMaxTransaction\cf7 \strokec7 (\cf4 \strokec4 newOwner\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         excludeFromMaxTransaction\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ),\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         excludeFromMaxTransaction\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf15 \strokec15 0xdead\cf7 \strokec7 ),\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3         excludeFromReward\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ));\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  Transfer\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ),\cf4 \strokec4  newOwner\cf7 \strokec7 ,\cf4 \strokec4  _tTotal\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         transferOwnership\cf7 \strokec7 (\cf4 \strokec4 newOwner\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  name\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _name\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  symbol\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 string\cf4 \strokec4  \cf12 \strokec12 memory\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _symbol\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  decimals\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint8\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _decimals\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  totalSupply\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf18 \strokec18 override\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _tTotal\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  balanceOf\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf18 \strokec18 override\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _isExcluded\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ])\cf4 \strokec4  \cf10 \strokec10 return\cf4 \strokec4  _tOwned\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ];\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  tokenFromReflection\cf7 \strokec7 (\cf4 \strokec4 _rOwned\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ]);\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  transfer\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amount\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf18 \strokec18 override\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _transfer\cf7 \strokec7 (\cf4 \strokec4 _msgSender\cf7 \strokec7 (),\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  allowance\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  owner\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf18 \strokec18 override\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _allowances\cf7 \strokec7 [\cf4 \strokec4 owner\cf7 \strokec7 ][\cf4 \strokec4 spender\cf7 \strokec7 ];\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  approve\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  amount\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 public\cf4 \cb1 \strokec4 \
\cb3         \cf18 \strokec18 override\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _approve\cf7 \strokec7 (\cf4 \strokec4 _msgSender\cf7 \strokec7 (),\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  transferFrom\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf18 \strokec18 override\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _transfer\cf7 \strokec7 (\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _approve\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             _msgSender\cf7 \strokec7 (),\cf4 \cb1 \strokec4 \
\cb3             _allowances\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ][\cf4 \strokec4 _msgSender\cf7 \strokec7 ()].\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3                 amount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3                 \cf14 \strokec14 "ERC20: transfer amount exceeds allowance"\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  increaseAllowance\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  addedValue\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 virtual\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _approve\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             _msgSender\cf7 \strokec7 (),\cf4 \cb1 \strokec4 \
\cb3             spender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             _allowances\cf7 \strokec7 [\cf4 \strokec4 _msgSender\cf7 \strokec7 ()][\cf4 \strokec4 spender\cf7 \strokec7 ].\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 addedValue\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  decreaseAllowance\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  subtractedValue\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 virtual\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _approve\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             _msgSender\cf7 \strokec7 (),\cf4 \cb1 \strokec4 \
\cb3             spender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             _allowances\cf7 \strokec7 [\cf4 \strokec4 _msgSender\cf7 \strokec7 ()][\cf4 \strokec4 spender\cf7 \strokec7 ].\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3                 subtractedValue\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3                 \cf14 \strokec14 "ERC20: decreased allowance below zero"\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  isExcludedFromReward\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _isExcluded\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ];\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  totalFees\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _tFeeTotal\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 // remove limits after token is stable - 30-60 minutes\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  removeLimits\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3         limitsInEffect \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         gasLimitActive \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         transferDelayEnabled \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 // only use if conducting a presale\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  addPresaleAddressForExclusions\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  _presaleAddress\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         excludeFromFee\cf7 \strokec7 (\cf4 \strokec4 _presaleAddress\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         excludeFromMaxTransaction\cf7 \strokec7 (\cf4 \strokec4 _presaleAddress\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 // disable Transfer delay\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  disableTransferDelay\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3         transferDelayEnabled \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  withdrawLP\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  percToWithdraw\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 timestamp \cf7 \strokec7 >=\cf4 \strokec4  nextAvailableLpWithdrawDate\cf7 \strokec7 (),\cf4 \strokec4  \cf14 \strokec14 "May only withdraw every 7 days"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 percToWithdraw \cf7 \strokec7 <=\cf4 \strokec4  \cf6 \strokec6 20\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "May only withdraw 20% every 7 days"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         lastLPWithdrawalTimestamp \cf7 \strokec7 =\cf4 \strokec4  \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 timestamp\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3         \cf2 \strokec2 // get balance of pair tokens on the contract and allow 20% to be withdrawn.\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amtToWithdraw \cf7 \strokec7 =\cf4 \strokec4  IERC20\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 )).\cf4 \strokec4 balanceOf\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ))\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4  percToWithdraw \cf7 \strokec7 /\cf4 \strokec4  \cf6 \strokec6 100\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3         IERC20\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 ).\cf4 \strokec4 transfer\cf7 \strokec7 (\cf11 \strokec11 msg\cf7 \strokec7 .\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  amtToWithdraw\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  nextAvailableLpWithdrawDate\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  lastLPWithdrawalTimestamp \cf7 \strokec7 +\cf4 \strokec4  \cf6 \strokec6 7\cf4 \strokec4  days\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  excludeFromMaxTransaction\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  updAds\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 bool\cf4 \strokec4  isEx\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _isExcludedMaxTransactionAmount\cf7 \strokec7 [\cf4 \strokec4 updAds\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  isEx\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 // once enabled, can never be turned off\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  enableTrading\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         tradingActive \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         swapAndLiquifyEnabled \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         tradingActiveBlock \cf7 \strokec7 =\cf4 \strokec4  \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 number\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  minimumTokensBeforeSwapAmount\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  minimumTokensBeforeSwap\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3      \cf2 \strokec2 // change the minimum amount of tokens to sell from fees\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  updateMinimumTokensBeforeSwap\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  newAmount\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner\cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 newAmount \cf7 \strokec7 >=\cf4 \strokec4  _tTotal \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf7 \strokec7 /\cf4 \strokec4  \cf6 \strokec6 100000\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Swap amount cannot be lower than 0.001% total supply."\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 newAmount \cf7 \strokec7 <=\cf4 \strokec4  _tTotal \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 5\cf4 \strokec4  \cf7 \strokec7 /\cf4 \strokec4  \cf6 \strokec6 1000\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Swap amount cannot be higher than 0.5% total supply."\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         minimumTokensBeforeSwap \cf7 \strokec7 =\cf4 \strokec4  newAmount\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  updateMaxAmount\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  newNum\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 newNum \cf7 \strokec7 >=\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _tTotal \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf7 \strokec7 /\cf4 \strokec4  \cf6 \strokec6 1000\cf7 \strokec7 )/\cf6 \strokec6 1e18\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Cannot set maxTransactionAmount lower than 0.1%"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         maxTransactionAmount \cf7 \strokec7 =\cf4 \strokec4  newNum \cf7 \strokec7 *\cf4 \strokec4  \cf7 \strokec7 (\cf6 \strokec6 10\cf4 \strokec4 **\cf6 \strokec6 18\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  updateMaxWallet\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  newNum\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 newNum \cf7 \strokec7 >=\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _tTotal \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf7 \strokec7 /\cf4 \strokec4  \cf6 \strokec6 100\cf7 \strokec7 )/\cf6 \strokec6 1e18\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Cannot set Max Wallet lower than 1%"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         maxWallet \cf7 \strokec7 =\cf4 \strokec4  newNum \cf7 \strokec7 *\cf4 \strokec4  \cf7 \strokec7 (\cf6 \strokec6 10\cf4 \strokec4 **\cf6 \strokec6 18\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setAutomatedMarketMakerPair\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  pair\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 bool\cf4 \strokec4  value\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 pair \cf7 \strokec7 !=\cf4 \strokec4  uniswapV2Pair\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "The pair cannot be removed from automatedMarketMakerPairs"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3         _setAutomatedMarketMakerPair\cf7 \strokec7 (\cf4 \strokec4 pair\cf7 \strokec7 ,\cf4 \strokec4  value\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _setAutomatedMarketMakerPair\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  pair\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 bool\cf4 \strokec4  value\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 pair\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  value\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _isExcludedMaxTransactionAmount\cf7 \strokec7 [\cf4 \strokec4 pair\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  value\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 value\cf7 \strokec7 )\{\cf4 \strokec4 excludeFromReward\cf7 \strokec7 (\cf4 \strokec4 pair\cf7 \strokec7 );\}\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf7 \strokec7 (!\cf4 \strokec4 value\cf7 \strokec7 )\{\cf4 \strokec4 includeInReward\cf7 \strokec7 (\cf4 \strokec4 pair\cf7 \strokec7 );\}\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setGasPriceLimit\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  gas\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 gas \cf7 \strokec7 >=\cf4 \strokec4  \cf6 \strokec6 400\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         gasPriceLimit \cf7 \strokec7 =\cf4 \strokec4  gas \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  gwei\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  reflectionFromToken\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  tAmount\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 bool\cf4 \strokec4  deductTransferFee\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 tAmount \cf7 \strokec7 <=\cf4 \strokec4  _tTotal\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Amount must be less than supply"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (!\cf4 \strokec4 deductTransferFee\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  rAmount\cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _getValues\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3             \cf10 \strokec10 return\cf4 \strokec4  rAmount\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \strokec4  \cf13 \strokec13 else\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 (,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  rTransferAmount\cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _getValues\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3             \cf10 \strokec10 return\cf4 \strokec4  rTransferAmount\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  tokenFromReflection\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  rAmount\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 public\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             rAmount \cf7 \strokec7 <=\cf4 \strokec4  _rTotal\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf14 \strokec14 "Amount must be less than total reflections"\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  currentRate \cf7 \strokec7 =\cf4 \strokec4  _getRate\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  rAmount\cf7 \strokec7 .\cf4 \strokec4 div\cf7 \strokec7 (\cf4 \strokec4 currentRate\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  excludeFromReward\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (!\cf4 \strokec4 _isExcluded\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ],\cf4 \strokec4  \cf14 \strokec14 "Account is already excluded"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _excluded\cf7 \strokec7 .\cf4 \strokec4 length \cf7 \strokec7 +\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf7 \strokec7 <=\cf4 \strokec4  \cf6 \strokec6 20\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Cannot exclude more than 20 accounts.  Include a previously excluded address."\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _rOwned\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             _tOwned\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  tokenFromReflection\cf7 \strokec7 (\cf4 \strokec4 _rOwned\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ]);\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         _isExcluded\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _excluded\cf7 \strokec7 .\cf4 \strokec4 push\cf7 \strokec7 (\cf4 \strokec4 account\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  includeInReward\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _isExcluded\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ],\cf4 \strokec4  \cf14 \strokec14 "Account is not excluded"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf17 \strokec17 for\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \strokec4  i \cf7 \strokec7 <\cf4 \strokec4  _excluded\cf7 \strokec7 .\cf4 \strokec4 length\cf7 \strokec7 ;\cf4 \strokec4  i\cf7 \strokec7 ++)\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _excluded\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 ==\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3                 _excluded\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _excluded\cf7 \strokec7 [\cf4 \strokec4 _excluded\cf7 \strokec7 .\cf4 \strokec4 length \cf7 \strokec7 -\cf4 \strokec4  \cf6 \strokec6 1\cf7 \strokec7 ];\cf4 \cb1 \strokec4 \
\cb3                 _tOwned\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 _isExcluded\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 _excluded\cf7 \strokec7 .\cf4 \strokec4 pop\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3                 \cf17 \strokec17 break\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3  \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _approve\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  owner\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 owner \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ),\cf4 \strokec4  \cf14 \strokec14 "ERC20: approve from the zero address"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 spender \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ),\cf4 \strokec4  \cf14 \strokec14 "ERC20: approve to the zero address"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\
\cb3         _allowances\cf7 \strokec7 [\cf4 \strokec4 owner\cf7 \strokec7 ][\cf4 \strokec4 spender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  amount\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  Approval\cf7 \strokec7 (\cf4 \strokec4 owner\cf7 \strokec7 ,\cf4 \strokec4  spender\cf7 \strokec7 ,\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _transfer\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  from\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 from \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ),\cf4 \strokec4  \cf14 \strokec14 "ERC20: transfer from the zero address"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 to \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ),\cf4 \strokec4  \cf14 \strokec14 "ERC20: transfer to the zero address"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 amount \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Transfer amount must be greater than zero"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf13 \strokec13 if\cf7 \strokec7 (!\cf4 \strokec4 tradingActive\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3             \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 ||\cf4 \strokec4  _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ],\cf4 \strokec4  \cf14 \strokec14 "Trading is not active yet."\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3  \cb1 \
\cb3         \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 limitsInEffect\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3             \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3                 from \cf7 \strokec7 !=\cf4 \strokec4  owner\cf7 \strokec7 ()\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3                 to \cf7 \strokec7 !=\cf4 \strokec4  owner\cf7 \strokec7 ()\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3                 to \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3                 to \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf15 \strokec15 0xdead\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 !\cf4 \strokec4 inSwapAndLiquify \cf7 \strokec7 &&\cf4 \strokec4  \cb1 \
\cb3                 \cf7 \strokec7 !\cf4 \strokec4 _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 !\cf4 \strokec4 _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ]\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 )\{\cf4 \strokec4                 \cb1 \
\cb3                 \cf2 \strokec2 // only use to prevent sniper buys in the first blocks.\cf4 \cb1 \strokec4 \
\cb3                 \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 gasLimitActive \cf7 \strokec7 &&\cf4 \strokec4  automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ])\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3                     \cf11 \strokec11 require\cf7 \strokec7 (\cf11 \strokec11 tx\cf7 \strokec7 .\cf4 \strokec4 gasprice \cf7 \strokec7 <=\cf4 \strokec4  gasPriceLimit\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Gas price exceeds limit."\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3                 \cb1 \
\cb3                 \cf2 \strokec2 // at launch if the transfer delay is enabled, ensure the block timestamps for purchasers is set -- during launch.  \cf4 \cb1 \strokec4 \
\cb3                 \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 transferDelayEnabled\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3                     \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 to \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Router\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  to \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 ))\{\cf4 \cb1 \strokec4 \
\cb3                         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _holderLastTransferTimestamp\cf7 \strokec7 [\cf11 \strokec11 tx\cf7 \strokec7 .\cf4 \strokec4 origin\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 <\cf4 \strokec4  \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 number\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "_transfer:: Transfer Delay enabled.  Only one purchase per block allowed."\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3                         _holderLastTransferTimestamp\cf7 \strokec7 [\cf11 \strokec11 tx\cf7 \strokec7 .\cf4 \strokec4 origin\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 number\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3                 \cb1 \
\cb3                 \cf2 \strokec2 //when buy\cf4 \cb1 \strokec4 \
\cb3                 \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  \cf7 \strokec7 !\cf4 \strokec4 _isExcludedMaxTransactionAmount\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ])\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3                     \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 amount \cf7 \strokec7 <=\cf4 \strokec4  maxTransactionAmount\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Buy transfer amount exceeds the maxTransactionAmount."\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3                     \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 amount \cf7 \strokec7 +\cf4 \strokec4  balanceOf\cf7 \strokec7 (\cf4 \strokec4 to\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 <=\cf4 \strokec4  maxWallet\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Cannot exceed Max Wallet"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 \}\cf4 \strokec4  \cb1 \
\cb3                 \cf2 \strokec2 //when sell\cf4 \cb1 \strokec4 \
\cb3                 \cf13 \strokec13 else\cf4 \strokec4  \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  \cf7 \strokec7 !\cf4 \strokec4 _isExcludedMaxTransactionAmount\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ])\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3                     \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 amount \cf7 \strokec7 <=\cf4 \strokec4  maxTransactionAmount\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Sell transfer amount exceeds the maxTransactionAmount."\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3                 \cf13 \strokec13 else\cf4 \strokec4  \cf13 \strokec13 if\cf7 \strokec7 (!\cf4 \strokec4 _isExcludedMaxTransactionAmount\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ])\{\cf4 \cb1 \strokec4 \
\cb3                     \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 amount \cf7 \strokec7 +\cf4 \strokec4  balanceOf\cf7 \strokec7 (\cf4 \strokec4 to\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 <=\cf4 \strokec4  maxWallet\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Cannot exceed Max Wallet"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  contractTokenBalance \cf7 \strokec7 =\cf4 \strokec4  balanceOf\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ));\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bool\cf4 \strokec4  overMinimumTokenBalance \cf7 \strokec7 =\cf4 \strokec4  contractTokenBalance \cf7 \strokec7 >=\cf4 \strokec4  minimumTokensBeforeSwap\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3         \cf2 \strokec2 // swap and liquify\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 !\cf4 \strokec4 inSwapAndLiquify \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3             swapAndLiquifyEnabled \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3             balanceOf\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 !\cf4 \strokec4 _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 !\cf4 \strokec4 _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3             automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \cb1 \strokec4 \
\cb3             overMinimumTokenBalance\cb1 \
\cb3         \cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             swapBack\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3         \cf13 \strokec13 if\cf7 \strokec7 (!\cf4 \strokec4 inSwapAndLiquify \cf7 \strokec7 &&\cf4 \strokec4  automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  lpBurnEnabled \cf7 \strokec7 &&\cf4 \strokec4  \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 timestamp \cf7 \strokec7 >=\cf4 \strokec4  lastLpBurnTime \cf7 \strokec7 +\cf4 \strokec4  lpBurnFrequency \cf7 \strokec7 &&\cf4 \strokec4  \cf7 \strokec7 !\cf4 \strokec4 _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ])\{\cf4 \cb1 \strokec4 \
\cb3             autoBurnLiquidityPairTokens\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3         removeAllFee\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         buyOrSellSwitch \cf7 \strokec7 =\cf4 \strokec4  TRANSFER\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (!\cf4 \strokec4 _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  \cf7 \strokec7 !\cf4 \strokec4 _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ])\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 tradingActiveBlock \cf7 \strokec7 +\cf4 \strokec4  \cf6 \strokec6 1\cf4 \strokec4  \cf7 \strokec7 >=\cf4 \strokec4  \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 number \cf7 \strokec7 &&\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 ||\cf4 \strokec4  automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ]))\{\cf4 \cb1 \strokec4 \
\cb3                 _taxFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 600\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 _liquidityFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 9300\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 buyOrSellSwitch \cf7 \strokec7 =\cf4 \strokec4  SELL\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 // Buy\cf4 \cb1 \strokec4 \
\cb3             \cf13 \strokec13 else\cf4 \strokec4  \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 from\cf7 \strokec7 ])\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3                 _taxFee \cf7 \strokec7 =\cf4 \strokec4  _buyTaxFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 _liquidityFee \cf7 \strokec7 =\cf4 \strokec4  _buyLiquidityFee \cf7 \strokec7 +\cf4 \strokec4  _buyMarketingFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 _liquidityFee \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3                     buyOrSellSwitch \cf7 \strokec7 =\cf4 \strokec4  BUY\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 \}\cf4 \strokec4  \cb1 \
\cb3             \cf2 \strokec2 // Sell\cf4 \cb1 \strokec4 \
\cb3             \cf13 \strokec13 else\cf4 \strokec4  \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 automatedMarketMakerPairs\cf7 \strokec7 [\cf4 \strokec4 to\cf7 \strokec7 ])\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3                 _taxFee \cf7 \strokec7 =\cf4 \strokec4  _sellTaxFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 _liquidityFee \cf7 \strokec7 =\cf4 \strokec4  _sellLiquidityFee \cf7 \strokec7 +\cf4 \strokec4  _sellMarketingFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 _liquidityFee \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3                     buyOrSellSwitch \cf7 \strokec7 =\cf4 \strokec4  SELL\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3             \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         _tokenTransfer\cf7 \strokec7 (\cf4 \strokec4 from\cf7 \strokec7 ,\cf4 \strokec4  to\cf7 \strokec7 ,\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         restoreAllFee\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapBack\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  lockTheSwap \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  contractBalance \cf7 \strokec7 =\cf4 \strokec4  balanceOf\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ));\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  totalTokensToSwap \cf7 \strokec7 =\cf4 \strokec4  _liquidityTokensToSwap \cf7 \strokec7 +\cf4 \strokec4  _marketingTokensToSwap\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bool\cf4 \strokec4  success\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3         \cf2 \strokec2 // prevent overly large contract sells.\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 contractBalance \cf7 \strokec7 >=\cf4 \strokec4  minimumTokensBeforeSwap \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 10\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3             contractBalance \cf7 \strokec7 =\cf4 \strokec4  minimumTokensBeforeSwap \cf7 \strokec7 *\cf4 \strokec4  \cf6 \strokec6 10\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3         \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 contractBalance \cf7 \strokec7 ==\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4  \cf7 \strokec7 ||\cf4 \strokec4  totalTokensToSwap \cf7 \strokec7 ==\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf10 \strokec10 return\cf7 \strokec7 ;\}\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 // Halve the amount of liquidity tokens\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tokensForLiquidity \cf7 \strokec7 =\cf4 \strokec4  contractBalance \cf7 \strokec7 *\cf4 \strokec4  _liquidityTokensToSwap \cf7 \strokec7 /\cf4 \strokec4  totalTokensToSwap \cf7 \strokec7 /\cf4 \strokec4  \cf6 \strokec6 2\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountToSwapForETH \cf7 \strokec7 =\cf4 \strokec4  contractBalance\cf7 \strokec7 .\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 tokensForLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  initialETHBalance \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ).\cf4 \strokec4 balance\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3         swapTokensForETH\cf7 \strokec7 (\cf4 \strokec4 amountToSwapForETH\cf7 \strokec7 );\cf4 \strokec4  \cb1 \
\cb3         \cb1 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  ethBalance \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ).\cf4 \strokec4 balance\cf7 \strokec7 .\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 initialETHBalance\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  ethForMarketing \cf7 \strokec7 =\cf4 \strokec4  ethBalance\cf7 \strokec7 .\cf4 \strokec4 mul\cf7 \strokec7 (\cf4 \strokec4 _marketingTokensToSwap\cf7 \strokec7 ).\cf4 \strokec4 div\cf7 \strokec7 (\cf4 \strokec4 totalTokensToSwap \cf7 \strokec7 -\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _liquidityTokensToSwap\cf7 \strokec7 /\cf6 \strokec6 2\cf7 \strokec7 ));\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  ethForLiquidity \cf7 \strokec7 =\cf4 \strokec4  ethBalance \cf7 \strokec7 -\cf4 \strokec4  ethForMarketing\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         _liquidityTokensToSwap \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _marketingTokensToSwap \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3                 \cb1 \
\cb3         \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 tokensForLiquidity \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  ethForLiquidity \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3             addLiquidity\cf7 \strokec7 (\cf4 \strokec4 tokensForLiquidity\cf7 \strokec7 ,\cf4 \strokec4  ethForLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 emit\cf4 \strokec4  SwapAndLiquify\cf7 \strokec7 (\cf4 \strokec4 amountToSwapForETH\cf7 \strokec7 ,\cf4 \strokec4  ethForLiquidity\cf7 \strokec7 ,\cf4 \strokec4  tokensForLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3         \cf2 \strokec2 // send remainder to marketing\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf4 \strokec4 success\cf7 \strokec7 ,)\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 marketingAddress\cf7 \strokec7 ).\cf4 \strokec4 call\cf7 \strokec7 \{\cf4 \strokec4 value\cf7 \strokec7 :\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ).\cf4 \strokec4 balance\cf7 \strokec7 \}(\cf14 \strokec14 ""\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  swapTokensForETH\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  tokenAmount\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  path \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 [](\cf6 \strokec6 2\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         path\cf7 \strokec7 [\cf6 \strokec6 0\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         path\cf7 \strokec7 [\cf6 \strokec6 1\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  uniswapV2Router\cf7 \strokec7 .\cf4 \strokec4 WETH\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         _approve\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ),\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Router\cf7 \strokec7 ),\cf4 \strokec4  tokenAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         uniswapV2Router\cf7 \strokec7 .\cf4 \strokec4 swapExactTokensForETHSupportingFeeOnTransferTokens\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             tokenAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf6 \strokec6 0\cf7 \strokec7 ,\cf4 \strokec4  \cf2 \strokec2 // accept any amount of ETH\cf4 \cb1 \strokec4 \
\cb3             path\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ),\cf4 \cb1 \strokec4 \
\cb3             \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 timestamp\cb1 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  addLiquidity\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  tokenAmount\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  ethAmount\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _approve\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ),\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Router\cf7 \strokec7 ),\cf4 \strokec4  tokenAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         uniswapV2Router\cf7 \strokec7 .\cf4 \strokec4 addLiquidityETH\cf7 \strokec7 \{\cf4 \strokec4 value\cf7 \strokec7 :\cf4 \strokec4  ethAmount\cf7 \strokec7 \}(\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ),\cf4 \cb1 \strokec4 \
\cb3             tokenAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf6 \strokec6 0\cf7 \strokec7 ,\cf4 \strokec4  \cf2 \strokec2 // slippage is unavoidable\cf4 \cb1 \strokec4 \
\cb3             \cf6 \strokec6 0\cf7 \strokec7 ,\cf4 \strokec4  \cf2 \strokec2 // slippage is unavoidable\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 address\cf7 \strokec7 (\cf15 \strokec15 0xdead\cf7 \strokec7 ),\cf4 \cb1 \strokec4 \
\cb3             \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 timestamp\cb1 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _tokenTransfer\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amount\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _isExcluded\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  \cf7 \strokec7 !\cf4 \strokec4 _isExcluded\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ])\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             _transferFromExcluded\cf7 \strokec7 (\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \strokec4  \cf13 \strokec13 else\cf4 \strokec4  \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (!\cf4 \strokec4 _isExcluded\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  _isExcluded\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ])\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             _transferToExcluded\cf7 \strokec7 (\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \strokec4  \cf13 \strokec13 else\cf4 \strokec4  \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _isExcluded\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  _isExcluded\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ])\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             _transferBothExcluded\cf7 \strokec7 (\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \strokec4  \cf13 \strokec13 else\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             _transferStandard\cf7 \strokec7 (\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  amount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _transferStandard\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tAmount\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tLiquidity\cb1 \
\cb3         \cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _getValues\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ].\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 rAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ].\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 rTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _takeLiquidity\cf7 \strokec7 (\cf4 \strokec4 tLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _reflectFee\cf7 \strokec7 (\cf4 \strokec4 rFee\cf7 \strokec7 ,\cf4 \strokec4  tFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  Transfer\cf7 \strokec7 (\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  tTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _transferToExcluded\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tAmount\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tLiquidity\cb1 \
\cb3         \cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _getValues\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ].\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 rAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _tOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _tOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ].\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 tTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ].\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 rTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _takeLiquidity\cf7 \strokec7 (\cf4 \strokec4 tLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _reflectFee\cf7 \strokec7 (\cf4 \strokec4 rFee\cf7 \strokec7 ,\cf4 \strokec4  tFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  Transfer\cf7 \strokec7 (\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  tTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _transferFromExcluded\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tAmount\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tLiquidity\cb1 \
\cb3         \cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _getValues\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _tOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _tOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ].\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ].\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 rAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ].\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 rTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _takeLiquidity\cf7 \strokec7 (\cf4 \strokec4 tLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _reflectFee\cf7 \strokec7 (\cf4 \strokec4 rFee\cf7 \strokec7 ,\cf4 \strokec4  tFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  Transfer\cf7 \strokec7 (\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  tTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _transferBothExcluded\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  sender\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tAmount\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  rFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tLiquidity\cb1 \
\cb3         \cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _getValues\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _tOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _tOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ].\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rOwned\cf7 \strokec7 [\cf4 \strokec4 sender\cf7 \strokec7 ].\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 rAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _tOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _tOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ].\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 tTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rOwned\cf7 \strokec7 [\cf4 \strokec4 recipient\cf7 \strokec7 ].\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 rTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _takeLiquidity\cf7 \strokec7 (\cf4 \strokec4 tLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _reflectFee\cf7 \strokec7 (\cf4 \strokec4 rFee\cf7 \strokec7 ,\cf4 \strokec4  tFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  Transfer\cf7 \strokec7 (\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  recipient\cf7 \strokec7 ,\cf4 \strokec4  tTransferAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _reflectFee\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  rFee\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  tFee\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _rTotal \cf7 \strokec7 =\cf4 \strokec4  _rTotal\cf7 \strokec7 .\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 rFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _tFeeTotal \cf7 \strokec7 =\cf4 \strokec4  _tFeeTotal\cf7 \strokec7 .\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 tFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _getValues\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  tAmount\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 private\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  tLiquidity\cb1 \
\cb3         \cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _getTValues\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  rAmount\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  rTransferAmount\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  rFee\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _getRValues\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             tAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             tFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             tLiquidity\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             _getRate\cf7 \strokec7 ()\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             rAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             rTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             rFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             tTransferAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             tFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             tLiquidity\cb1 \
\cb3         \cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _getTValues\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  tAmount\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 private\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tFee \cf7 \strokec7 =\cf4 \strokec4  calculateTaxFee\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tLiquidity \cf7 \strokec7 =\cf4 \strokec4  calculateLiquidityFee\cf7 \strokec7 (\cf4 \strokec4 tAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tTransferAmount \cf7 \strokec7 =\cf4 \strokec4  tAmount\cf7 \strokec7 .\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 tFee\cf7 \strokec7 ).\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 tLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 tTransferAmount\cf7 \strokec7 ,\cf4 \strokec4  tFee\cf7 \strokec7 ,\cf4 \strokec4  tLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _getRValues\cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tAmount\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tFee\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tLiquidity\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  currentRate\cb1 \
\cb3     \cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 private\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 pure\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  rAmount \cf7 \strokec7 =\cf4 \strokec4  tAmount\cf7 \strokec7 .\cf4 \strokec4 mul\cf7 \strokec7 (\cf4 \strokec4 currentRate\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  rFee \cf7 \strokec7 =\cf4 \strokec4  tFee\cf7 \strokec7 .\cf4 \strokec4 mul\cf7 \strokec7 (\cf4 \strokec4 currentRate\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  rLiquidity \cf7 \strokec7 =\cf4 \strokec4  tLiquidity\cf7 \strokec7 .\cf4 \strokec4 mul\cf7 \strokec7 (\cf4 \strokec4 currentRate\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  rTransferAmount \cf7 \strokec7 =\cf4 \strokec4  rAmount\cf7 \strokec7 .\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 rFee\cf7 \strokec7 ).\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 rLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 rAmount\cf7 \strokec7 ,\cf4 \strokec4  rTransferAmount\cf7 \strokec7 ,\cf4 \strokec4  rFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _getRate\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  rSupply\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  tSupply\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _getCurrentSupply\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  rSupply\cf7 \strokec7 .\cf4 \strokec4 div\cf7 \strokec7 (\cf4 \strokec4 tSupply\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _getCurrentSupply\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  rSupply \cf7 \strokec7 =\cf4 \strokec4  _rTotal\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  tSupply \cf7 \strokec7 =\cf4 \strokec4  _tTotal\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf17 \strokec17 for\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \strokec4  i \cf7 \strokec7 <\cf4 \strokec4  _excluded\cf7 \strokec7 .\cf4 \strokec4 length\cf7 \strokec7 ;\cf4 \strokec4  i\cf7 \strokec7 ++)\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3             \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \cb1 \strokec4 \
\cb3                 _rOwned\cf7 \strokec7 [\cf4 \strokec4 _excluded\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]]\cf4 \strokec4  \cf7 \strokec7 >\cf4 \strokec4  rSupply \cf7 \strokec7 ||\cf4 \cb1 \strokec4 \
\cb3                 _tOwned\cf7 \strokec7 [\cf4 \strokec4 _excluded\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]]\cf4 \strokec4  \cf7 \strokec7 >\cf4 \strokec4  tSupply\cb1 \
\cb3             \cf7 \strokec7 )\cf4 \strokec4  \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _rTotal\cf7 \strokec7 ,\cf4 \strokec4  _tTotal\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3             rSupply \cf7 \strokec7 =\cf4 \strokec4  rSupply\cf7 \strokec7 .\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 _rOwned\cf7 \strokec7 [\cf4 \strokec4 _excluded\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]]);\cf4 \cb1 \strokec4 \
\cb3             tSupply \cf7 \strokec7 =\cf4 \strokec4  tSupply\cf7 \strokec7 .\cf4 \strokec4 sub\cf7 \strokec7 (\cf4 \strokec4 _tOwned\cf7 \strokec7 [\cf4 \strokec4 _excluded\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]]);\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 rSupply \cf7 \strokec7 <\cf4 \strokec4  _rTotal\cf7 \strokec7 .\cf4 \strokec4 div\cf7 \strokec7 (\cf4 \strokec4 _tTotal\cf7 \strokec7 ))\cf4 \strokec4  \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _rTotal\cf7 \strokec7 ,\cf4 \strokec4  _tTotal\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 rSupply\cf7 \strokec7 ,\cf4 \strokec4  tSupply\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  _takeLiquidity\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  tLiquidity\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 buyOrSellSwitch \cf7 \strokec7 ==\cf4 \strokec4  BUY\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3             _liquidityTokensToSwap \cf7 \strokec7 +=\cf4 \strokec4  tLiquidity \cf7 \strokec7 *\cf4 \strokec4  _buyLiquidityFee \cf7 \strokec7 /\cf4 \strokec4  _liquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3             _marketingTokensToSwap \cf7 \strokec7 +=\cf4 \strokec4  tLiquidity \cf7 \strokec7 *\cf4 \strokec4  _buyMarketingFee \cf7 \strokec7 /\cf4 \strokec4  _liquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \strokec4  \cf13 \strokec13 else\cf4 \strokec4  \cf13 \strokec13 if\cf7 \strokec7 (\cf4 \strokec4 buyOrSellSwitch \cf7 \strokec7 ==\cf4 \strokec4  SELL\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3             _liquidityTokensToSwap \cf7 \strokec7 +=\cf4 \strokec4  tLiquidity \cf7 \strokec7 *\cf4 \strokec4  _sellLiquidityFee \cf7 \strokec7 /\cf4 \strokec4  _liquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3             _marketingTokensToSwap \cf7 \strokec7 +=\cf4 \strokec4  tLiquidity \cf7 \strokec7 *\cf4 \strokec4  _sellMarketingFee \cf7 \strokec7 /\cf4 \strokec4  _liquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  currentRate \cf7 \strokec7 =\cf4 \strokec4  _getRate\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  rLiquidity \cf7 \strokec7 =\cf4 \strokec4  tLiquidity\cf7 \strokec7 .\cf4 \strokec4 mul\cf7 \strokec7 (\cf4 \strokec4 currentRate\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _rOwned\cf7 \strokec7 [\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 )]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _rOwned\cf7 \strokec7 [\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 )].\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 rLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _isExcluded\cf7 \strokec7 [\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 )])\cf4 \cb1 \strokec4 \
\cb3             _tOwned\cf7 \strokec7 [\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 )]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  _tOwned\cf7 \strokec7 [\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 )].\cf4 \strokec4 add\cf7 \strokec7 (\cf4 \strokec4 tLiquidity\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  calculateTaxFee\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  _amount\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _amount\cf7 \strokec7 .\cf4 \strokec4 mul\cf7 \strokec7 (\cf4 \strokec4 _taxFee\cf7 \strokec7 ).\cf4 \strokec4 div\cf7 \strokec7 (\cf6 \strokec6 10000\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  calculateLiquidityFee\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  _amount\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 private\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 uint256\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _amount\cf7 \strokec7 .\cf4 \strokec4 mul\cf7 \strokec7 (\cf4 \strokec4 _liquidityFee\cf7 \strokec7 ).\cf4 \strokec4 div\cf7 \strokec7 (\cf6 \strokec6 10000\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  removeAllFee\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 _taxFee \cf7 \strokec7 ==\cf4 \strokec4  \cf6 \strokec6 0\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  _liquidityFee \cf7 \strokec7 ==\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\cf4 \strokec4  \cf10 \strokec10 return\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3         _previousTaxFee \cf7 \strokec7 =\cf4 \strokec4  _taxFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _previousLiquidityFee \cf7 \strokec7 =\cf4 \strokec4  _liquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3         _taxFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _liquidityFee \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  restoreAllFee\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _taxFee \cf7 \strokec7 =\cf4 \strokec4  _previousTaxFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _liquidityFee \cf7 \strokec7 =\cf4 \strokec4  _previousLiquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  isExcludedFromFee\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf7 \strokec7 )\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf10 \strokec10 return\cf4 \strokec4  _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ];\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  excludeFromFee\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  ExcludeFromFee\cf7 \strokec7 (\cf4 \strokec4 account\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  includeInFee\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  account\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 account\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  IncludeInFee\cf7 \strokec7 (\cf4 \strokec4 account\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setBuyFee\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  buyTaxFee\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  buyLiquidityFee\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  buyMarketingFee\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         onlyOwner\cb1 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _buyTaxFee \cf7 \strokec7 =\cf4 \strokec4  buyTaxFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _buyLiquidityFee \cf7 \strokec7 =\cf4 \strokec4  buyLiquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _buyMarketingFee \cf7 \strokec7 =\cf4 \strokec4  buyMarketingFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _buyTaxFee \cf7 \strokec7 +\cf4 \strokec4  _buyLiquidityFee \cf7 \strokec7 +\cf4 \strokec4  _buyMarketingFee \cf7 \strokec7 <=\cf4 \strokec4  \cf6 \strokec6 2000\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Must keep buy taxes below 20%"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  SetBuyFee\cf7 \strokec7 (\cf4 \strokec4 buyMarketingFee\cf7 \strokec7 ,\cf4 \strokec4  buyLiquidityFee\cf7 \strokec7 ,\cf4 \strokec4  buyTaxFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setSellFee\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  sellTaxFee\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  sellLiquidityFee\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  sellMarketingFee\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         onlyOwner\cb1 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         _sellTaxFee \cf7 \strokec7 =\cf4 \strokec4  sellTaxFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _sellLiquidityFee \cf7 \strokec7 =\cf4 \strokec4  sellLiquidityFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         _sellMarketingFee \cf7 \strokec7 =\cf4 \strokec4  sellMarketingFee\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _sellTaxFee \cf7 \strokec7 +\cf4 \strokec4  _sellLiquidityFee \cf7 \strokec7 +\cf4 \strokec4  _sellMarketingFee \cf7 \strokec7 <=\cf4 \strokec4  \cf6 \strokec6 3200\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Must keep sell taxes below 32%"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  SetSellFee\cf7 \strokec7 (\cf4 \strokec4 sellMarketingFee\cf7 \strokec7 ,\cf4 \strokec4  sellLiquidityFee\cf7 \strokec7 ,\cf4 \strokec4  sellTaxFee\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setMarketingAddress\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  _marketingAddress\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _marketingAddress \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ),\cf4 \strokec4  \cf14 \strokec14 "_marketingAddress address cannot be 0"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 marketingAddress\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 false\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         marketingAddress \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 payable\cf7 \strokec7 (\cf4 \strokec4 _marketingAddress\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         _isExcludedFromFee\cf7 \strokec7 [\cf4 \strokec4 marketingAddress\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 true\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  UpdatedMarketingAddress\cf7 \strokec7 (\cf4 \strokec4 _marketingAddress\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setSwapAndLiquifyEnabled\cf7 \strokec7 (\cf5 \strokec5 bool\cf4 \strokec4  _enabled\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         swapAndLiquifyEnabled \cf7 \strokec7 =\cf4 \strokec4  _enabled\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  SwapAndLiquifyEnabledUpdated\cf7 \strokec7 (\cf4 \strokec4 _enabled\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 // To receive ETH from uniswapV2Router when swapping\cf4 \cb1 \strokec4 \
\cb3     \cf16 \strokec16 receive\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 payable\cf4 \strokec4  \cf7 \strokec7 \{\}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  transferForeignToken\cf7 \strokec7 (\cf5 \strokec5 address\cf4 \strokec4  _token\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf4 \strokec4  _to\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 external\cf4 \cb1 \strokec4 \
\cb3         onlyOwner\cb1 \
\cb3         \cf10 \strokec10 returns\cf4 \strokec4  \cf7 \strokec7 (\cf5 \strokec5 bool\cf4 \strokec4  _sent\cf7 \strokec7 )\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _token \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf6 \strokec6 0\cf7 \strokec7 ),\cf4 \strokec4  \cf14 \strokec14 "_token address cannot be 0"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _token \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ),\cf4 \strokec4  \cf14 \strokec14 "Can't withdraw native tokens"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _token \cf7 \strokec7 !=\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 ),\cf4 \strokec4  \cf14 \strokec14 "Can't withdraw Native LP tokens with this method"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  _contractBalance \cf7 \strokec7 =\cf4 \strokec4  IERC20\cf7 \strokec7 (\cf4 \strokec4 _token\cf7 \strokec7 ).\cf4 \strokec4 balanceOf\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ));\cf4 \cb1 \strokec4 \
\cb3         _sent \cf7 \strokec7 =\cf4 \strokec4  IERC20\cf7 \strokec7 (\cf4 \strokec4 _token\cf7 \strokec7 ).\cf4 \strokec4 transfer\cf7 \strokec7 (\cf4 \strokec4 _to\cf7 \strokec7 ,\cf4 \strokec4  _contractBalance\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  TransferForeignToken\cf7 \strokec7 (\cf4 \strokec4 _token\cf7 \strokec7 ,\cf4 \strokec4  _contractBalance\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 // withdraw ETH if stuck before launch\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  withdrawStuckETH\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bool\cf4 \strokec4  success\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 (\cf4 \strokec4 success\cf7 \strokec7 ,)\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf11 \strokec11 msg\cf7 \strokec7 .\cf4 \strokec4 sender\cf7 \strokec7 ).\cf4 \strokec4 call\cf7 \strokec7 \{\cf4 \strokec4 value\cf7 \strokec7 :\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf9 \strokec9 this\cf7 \strokec7 ).\cf4 \strokec4 balance\cf7 \strokec7 \}(\cf14 \strokec14 ""\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setAutoLPBurnSettings\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  _frequencyInSeconds\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf4 \strokec4  _percent\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 bool\cf4 \strokec4  _Enabled\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _frequencyInSeconds \cf7 \strokec7 >=\cf4 \strokec4  \cf6 \strokec6 600\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "cannot set buyback more often than every 10 minutes"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 _percent \cf7 \strokec7 <=\cf4 \strokec4  \cf6 \strokec6 1000\cf4 \strokec4  \cf7 \strokec7 &&\cf4 \strokec4  _percent \cf7 \strokec7 >=\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Must set auto LP burn percent between 0% and 10%"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         lpBurnFrequency \cf7 \strokec7 =\cf4 \strokec4  _frequencyInSeconds\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         percentForLPBurn \cf7 \strokec7 =\cf4 \strokec4  _percent\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         lpBurnEnabled \cf7 \strokec7 =\cf4 \strokec4  _Enabled\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  autoBurnLiquidityPairTokens\cf7 \strokec7 ()\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         lastLpBurnTime \cf7 \strokec7 =\cf4 \strokec4  \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 timestamp\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 // get balance of liquidity pair\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  liquidityPairBalance \cf7 \strokec7 =\cf4 \strokec4  \cf9 \strokec9 this\cf7 \strokec7 .\cf4 \strokec4 balanceOf\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 // calculate amount to burn\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountToBurn \cf7 \strokec7 =\cf4 \strokec4  liquidityPairBalance\cf7 \strokec7 .\cf4 \strokec4 mul\cf7 \strokec7 (\cf4 \strokec4 percentForLPBurn\cf7 \strokec7 ).\cf4 \strokec4 div\cf7 \strokec7 (\cf6 \strokec6 10000\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 // pull tokens from pancakePair liquidity and move to dead address permanently\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 amountToBurn \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3             removeAllFee\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3             _transfer\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf15 \strokec15 0xdead\cf7 \strokec7 ),\cf4 \strokec4  amountToBurn\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3             restoreAllFee\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 //sync price since this is not in a swap transaction!\cf4 \cb1 \strokec4 \
\cb3         IUniswapV2Pair pair \cf7 \strokec7 =\cf4 \strokec4  IUniswapV2Pair\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         pair\cf7 \strokec7 .\cf4 \strokec4 sync\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  AutoNukeLP\cf7 \strokec7 (\cf4 \strokec4 amountToBurn\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  manualBurnLiquidityPairTokens\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  percent\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 timestamp \cf7 \strokec7 >\cf4 \strokec4  lastManualLpBurnTime \cf7 \strokec7 +\cf4 \strokec4  manualBurnFrequency \cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "Must wait for cooldown to finish"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 percent \cf7 \strokec7 <=\cf4 \strokec4  \cf6 \strokec6 1500\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "May not nuke more than 15% of tokens in LP"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         lastManualLpBurnTime \cf7 \strokec7 =\cf4 \strokec4  \cf11 \strokec11 block\cf7 \strokec7 .\cf4 \strokec4 timestamp\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 // get balance of liquidity pair\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  liquidityPairBalance \cf7 \strokec7 =\cf4 \strokec4  \cf9 \strokec9 this\cf7 \strokec7 .\cf4 \strokec4 balanceOf\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 // calculate amount to burn\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint256\cf4 \strokec4  amountToBurn \cf7 \strokec7 =\cf4 \strokec4  liquidityPairBalance\cf7 \strokec7 .\cf4 \strokec4 mul\cf7 \strokec7 (\cf4 \strokec4 percent\cf7 \strokec7 ).\cf4 \strokec4 div\cf7 \strokec7 (\cf6 \strokec6 10000\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 // pull tokens from pancakePair liquidity and move to dead address permanently\cf4 \cb1 \strokec4 \
\cb3         \cf13 \strokec13 if\cf4 \strokec4  \cf7 \strokec7 (\cf4 \strokec4 amountToBurn \cf7 \strokec7 >\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3             removeAllFee\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3             _transfer\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 address\cf7 \strokec7 (\cf15 \strokec15 0xdead\cf7 \strokec7 ),\cf4 \strokec4  amountToBurn\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3             restoreAllFee\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         \cb1 \
\cb3         \cf2 \strokec2 //sync price since this is not in a swap transaction!\cf4 \cb1 \strokec4 \
\cb3         IUniswapV2Pair pair \cf7 \strokec7 =\cf4 \strokec4  IUniswapV2Pair\cf7 \strokec7 (\cf4 \strokec4 uniswapV2Pair\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         pair\cf7 \strokec7 .\cf4 \strokec4 sync\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 emit\cf4 \strokec4  ManualNukeLP\cf7 \strokec7 (\cf4 \strokec4 amountToBurn\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 // for one-time airdrop feature after contract launch\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  airdropToWallets\cf7 \strokec7 (\cf5 \strokec5 address\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  airdropWallets\cf7 \strokec7 ,\cf4 \strokec4  \cf5 \strokec5 uint256\cf7 \strokec7 []\cf4 \strokec4  \cf12 \strokec12 memory\cf4 \strokec4  amount\cf7 \strokec7 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner\cf7 \strokec7 ()\cf4 \strokec4  \cf7 \strokec7 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf7 \strokec7 (\cf4 \strokec4 airdropWallets\cf7 \strokec7 .\cf4 \strokec4 length \cf7 \strokec7 ==\cf4 \strokec4  amount\cf7 \strokec7 .\cf4 \strokec4 length\cf7 \strokec7 ,\cf4 \strokec4  \cf14 \strokec14 "airdropToWallets:: Arrays must be the same length"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         removeAllFee\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3         buyOrSellSwitch \cf7 \strokec7 =\cf4 \strokec4  TRANSFER\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3         \cf17 \strokec17 for\cf7 \strokec7 (\cf5 \strokec5 uint256\cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf6 \strokec6 0\cf7 \strokec7 ;\cf4 \strokec4  i \cf7 \strokec7 <\cf4 \strokec4  airdropWallets\cf7 \strokec7 .\cf4 \strokec4 length\cf7 \strokec7 ;\cf4 \strokec4  i\cf7 \strokec7 ++)\{\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 address\cf4 \strokec4  wallet \cf7 \strokec7 =\cf4 \strokec4  airdropWallets\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ];\cf4 \cb1 \strokec4 \
\cb3             \cf5 \strokec5 uint256\cf4 \strokec4  airdropAmount \cf7 \strokec7 =\cf4 \strokec4  amount\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]*\cf6 \strokec6 1e18\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3             _tokenTransfer\cf7 \strokec7 (\cf11 \strokec11 msg\cf7 \strokec7 .\cf4 \strokec4 sender\cf7 \strokec7 ,\cf4 \strokec4  wallet\cf7 \strokec7 ,\cf4 \strokec4  airdropAmount\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3         restoreAllFee\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
}